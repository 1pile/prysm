load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("//tools:fuzz.bzl", "go_fuzz_test")
load("//tools:ssz.bzl", "SSZ_DEPS", "ssz_gen_marshal")

ssz_gen_marshal(
    name = "ssz_generated_files",
    srcs = ["inputs.go"],
    includes = [
        "//proto/beacon/p2p/v1:go_default_library",
        "@com_github_prysmaticlabs_ethereumapis//eth/v1alpha1:go_default_library",
    ],
    objs = [
        "InputBlockHeader",
        "InputAttesterSlashingWrapper",
        "InputAttestationWrapper",
        "InputDepositWrapper",
        "InputVoluntaryExitWrapper",
        "InputProposerSlashingWrapper",
    ],
)

FUZZ_DEPS = [
    "//beacon-chain/state:go_default_library",
    "//beacon-chain/core/state:go_default_library",
    "//shared/params:go_default_library",
    "//beacon-chain/core/blocks:go_default_library",
    "//proto/beacon/p2p/v1:go_default_library",
    "//beacon-chain/testing:go_default_library",
    "//shared/featureconfig:go_default_library",
    "//beacon-chain/p2p:go_default_library",
    "//beacon-chain/sync:go_default_library",
    "//beacon-chain/blockchain/testing:go_default_library",
    "//beacon-chain/sync/initial-sync/testing:go_default_library",
    "//beacon-chain/cache:go_default_library",
    "@io_bazel_rules_go//go/tools/bazel:go_default_library",
    "@com_github_sirupsen_logrus//:go_default_library",
    "@com_github_prysmaticlabs_ethereumapis//eth/v1alpha1:go_default_library",
    "@com_github_prysmaticlabs_go_ssz//:go_default_library",
    "@com_github_pkg_errors//:go_default_library",
    "@com_github_libp2p_go_libp2p//:go_default_library",
    "@com_github_libp2p_go_libp2p_core//host:go_default_library",
    "@com_github_libp2p_go_libp2p_core//peer:go_default_library",
] + SSZ_DEPS

IMPORT_PATH = "github.com/prysmaticlabs/prysm/fuzz"

SRCS = [
    "common.go",
    "inputs.go",
    ":ssz_generated_files",
] + glob(["*_fuzz.go"])

go_fuzz_test(
    name = "attestation_fuzz_test",
    srcs = SRCS,
    corpus = "@sigp_beacon_fuzz_corpora//:current_mainnet_attestation",
    corpus_path = "external/sigp_beacon_fuzz_corpora/0-9-4/mainnet/attestation",
    func = "BeaconFuzzAttestation",
    importpath = IMPORT_PATH,
    deps = FUZZ_DEPS,
)

go_fuzz_test(
    name = "attester_slashing_fuzz_test",
    srcs = SRCS,
    corpus = "@sigp_beacon_fuzz_corpora//:current_mainnet_attester_slashing",
    corpus_path = "external/sigp_beacon_fuzz_corpora/0-9-4/mainnet/attester_slashing",
    func = "BeaconFuzzAttesterSlashing",
    importpath = IMPORT_PATH,
    deps = FUZZ_DEPS,
)

go_fuzz_test(
    name = "block_fuzz_test",
    srcs = SRCS,
    corpus = "@sigp_beacon_fuzz_corpora//:current_mainnet_block_header",
    corpus_path = "external/sigp_beacon_fuzz_corpora/0-9-4/mainnet/block_header",
    func = "BeaconFuzzBlock",
    importpath = IMPORT_PATH,
    input_size = 302,
    deps = FUZZ_DEPS,
)

go_fuzz_test(
    name = "block_header_fuzz_test",
    srcs = SRCS,
    corpus = "@sigp_beacon_fuzz_corpora//:current_mainnet_block_header",
    corpus_path = "external/sigp_beacon_fuzz_corpora/0-9-4/mainnet/block_header",
    func = "BeaconFuzzBlockHeader",
    importpath = IMPORT_PATH,
    input_size = 302,
    deps = FUZZ_DEPS,
)

go_fuzz_test(
    name = "deposit_fuzz_test",
    srcs = SRCS,
    corpus = "deposit_corpus",
    corpus_path = "fuzz/deposit_corpus",
    func = "BeaconFuzzDeposit",
    importpath = IMPORT_PATH,
    deps = FUZZ_DEPS,
)

go_fuzz_test(
    name = "proposer_slashing_fuzz_test",
    srcs = SRCS,
    corpus = "@sigp_beacon_fuzz_corpora//:current_mainnet_proposer_slashing",
    corpus_path = "external/sigp_beacon_fuzz_corpora/0-9-4/mainnet/proposer_slashing",
    func = "BeaconFuzzProposerSlashing",
    importpath = IMPORT_PATH,
    deps = FUZZ_DEPS,
)

go_fuzz_test(
    name = "rpc_status_fuzz_test",
    srcs = SRCS,
    corpus = "rpc_status_corpus",
    corpus_path = "fuzz/rpc_status_corpus",
    func = "FuzzP2PRPCStatus",
    importpath = IMPORT_PATH,
    deps = FUZZ_DEPS,
)

go_fuzz_test(
    name = "voluntary_exit_fuzz_test",
    srcs = SRCS,
    corpus = "voluntary_exit_corpus",
    corpus_path = "fuzz/voluntary_exit_corpus",
    func = "BeaconFuzzVoluntaryExit",
    importpath = IMPORT_PATH,
    deps = FUZZ_DEPS,
)

# gazelle:resolve go github.com/prysmaticlabs/prysm/fuzz //beacon-chain/fuzz:block_header_fuzz_lib_with_fuzzer

go_test(
    name = "go_default_test",
    srcs = ["regression_test.go"],
    data = glob(["regression_data/*.ssz"]),
    embed = [":go_default_library"],
    deps = [
        "//fuzz:block_header_fuzz_test_lib_with_fuzzer",
        "@io_bazel_rules_go//go/tools/bazel:go_default_library",
    ],
)

go_library(
    name = "go_default_library",
    testonly = 1,
    srcs = [
        "attestation_fuzz.go",
        "block_fuzz.go",
        "common.go",
        "deposit_fuzz.go",
        "inputs.go",
        "shuffle_fuzz.go",
    ],
    importpath = IMPORT_PATH,
    visibility = ["//visibility:public"],
    deps = [
        "//beacon-chain/core/blocks:go_default_library",
        "//beacon-chain/core/state:go_default_library",
        "//beacon-chain/state:go_default_library",
        "//beacon-chain/testing:go_default_library",
        "//shared/featureconfig:go_default_library",
        "//shared/params:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@com_github_prysmaticlabs_ethereumapis//eth/v1alpha1:go_default_library",
        "@com_github_prysmaticlabs_go_ssz//:go_default_library",
        "@io_bazel_rules_go//go/tools/bazel:go_default_library",
    ],
)
